{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Aapani-dukan-backend/Aapani-dukan-frontend/src/pages/AuthCallback.js\",\n  _s = $RefreshSig$();\n// src/pages/AuthCallback.js\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthCallback = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getToken = async () => {\n      try {\n        const res = await fetch(\"https://your-backend.com/auth/google/callback\", {\n          credentials: \"include\"\n        });\n        const data = await res.json();\n        if (data.token && typeof data.token === \"string\") {\n          // सही key से token सेट करें\n          localStorage.setItem(\"jwtToken\", data.token);\n          navigate(\"/\"); // Redirect to main route (it will decide role-based route)\n        } else {\n          console.error(\"Invalid or missing token from backend:\", data);\n          navigate(\"/login\");\n        }\n      } catch (err) {\n        console.error(\"Callback failed:\", err);\n        navigate(\"/login\");\n      }\n    };\n    getToken();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Logging you in...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthCallback, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthCallback;\nexport default AuthCallback;\nvar _c;\n$RefreshReg$(_c, \"AuthCallback\");","map":{"version":3,"names":["useEffect","useNavigate","jsxDEV","_jsxDEV","AuthCallback","_s","navigate","getToken","res","fetch","credentials","data","json","token","localStorage","setItem","console","error","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/Aapani-dukan-backend/Aapani-dukan-frontend/src/pages/AuthCallback.js"],"sourcesContent":["// src/pages/AuthCallback.js\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthCallback = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getToken = async () => {\n      try {\n        const res = await fetch(\"https://your-backend.com/auth/google/callback\", {\n          credentials: \"include\",\n        });\n        const data = await res.json();\n\n        if (data.token && typeof data.token === \"string\") {\n          // सही key से token सेट करें\n          localStorage.setItem(\"jwtToken\", data.token);\n          navigate(\"/\"); // Redirect to main route (it will decide role-based route)\n        } else {\n          console.error(\"Invalid or missing token from backend:\", data);\n          navigate(\"/login\");\n        }\n      } catch (err) {\n        console.error(\"Callback failed:\", err);\n        navigate(\"/login\");\n      }\n    };\n\n    getToken();\n  }, [navigate]);\n\n  return <div>Logging you in...</div>;\n};\n\nexport default AuthCallback;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;UACvEC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAE7B,IAAID,IAAI,CAACE,KAAK,IAAI,OAAOF,IAAI,CAACE,KAAK,KAAK,QAAQ,EAAE;UAChD;UACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACE,KAAK,CAAC;UAC5CP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACLU,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEN,IAAI,CAAC;UAC7DL,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZF,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEC,GAAG,CAAC;QACtCZ,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACrC,CAAC;AAAClB,EAAA,CA7BID,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAuB,EAAA,GADxBpB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}